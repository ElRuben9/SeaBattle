/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Pantallas;

import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import utilerias.BotonPersonalizado;
import utilerias.PersonalizacionGeneral;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

/**
 *
 * @author ruben
 */
public class PantallaConexion extends javax.swing.JFrame {

    String fondo = "recursos/interfaz/fondoEscogerPartida.png";
    private PantallaEscogerPartida origen;
    PantallaPrincipal inicio;

    /**
     * Creates new form PantallaPrincipal
     */
    public PantallaConexion(PantallaEscogerPartida origen) {
        this.origen = origen;
        initComponents();

        setTitle("Conectar a Sala");
        setSize(400, 300);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new GridBagLayout());

        GridBagConstraints gbc = new GridBagConstraints();

        JLabel lblIP = new JLabel("IP del Servidor:");
        JLabel lblPuerto = new JLabel("Puerto:");

        txtIP = new JTextField("127.0.0.1", 15);
        txtPuerto = new JTextField("5000", 15);
        btnConectar = new JButton("Conectar");

        gbc.insets = new Insets(10, 10, 10, 10);
        gbc.gridx = 0;
        gbc.gridy = 0;
        add(lblIP, gbc);
        gbc.gridx = 1;
        add(txtIP, gbc);

        gbc.gridx = 0;
        gbc.gridy = 1;
        add(lblPuerto, gbc);
        gbc.gridx = 1;
        add(txtPuerto, gbc);

        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.gridwidth = 2;
        add(btnConectar, gbc);

        btnConectar.addActionListener(new ActionListener() {
    @Override
    public void actionPerformed(ActionEvent e) {
        btnConectarActionPerformed(e);
    }
});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelFondo = new javax.swing.JPanel();
        jPanelHead = new javax.swing.JPanel();
        jblConfiguracion = new javax.swing.JLabel();
        jPanelDerechos = new javax.swing.JPanel();
        jblDerechos = new javax.swing.JLabel();
        txtPuerto = new javax.swing.JTextField();
        txtIP = new javax.swing.JTextField();
        btnConectar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Batalla Naval");
        setMinimumSize(new java.awt.Dimension(950, 600));
        setSize(new java.awt.Dimension(950, 600));

        jPanelFondo.setLayout(null);

        jPanelHead.setBackground(new java.awt.Color(13, 26, 51));

        jblConfiguracion.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        jblConfiguracion.setForeground(new java.awt.Color(255, 255, 255));
        jblConfiguracion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jblConfiguracion.setText("Escoger partida");

        javax.swing.GroupLayout jPanelHeadLayout = new javax.swing.GroupLayout(jPanelHead);
        jPanelHead.setLayout(jPanelHeadLayout);
        jPanelHeadLayout.setHorizontalGroup(
            jPanelHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 950, Short.MAX_VALUE)
            .addGroup(jPanelHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelHeadLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jblConfiguracion, javax.swing.GroupLayout.PREFERRED_SIZE, 950, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanelHeadLayout.setVerticalGroup(
            jPanelHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
            .addGroup(jPanelHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelHeadLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jblConfiguracion, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanelFondo.add(jPanelHead);
        jPanelHead.setBounds(0, 0, 950, 60);

        jPanelDerechos.setBackground(new java.awt.Color(13, 26, 51));

        jblDerechos.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jblDerechos.setForeground(new java.awt.Color(255, 255, 255));
        jblDerechos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jblDerechos.setText("© 2025 Batalla Naval. Todos los derechos reservados.");

        javax.swing.GroupLayout jPanelDerechosLayout = new javax.swing.GroupLayout(jPanelDerechos);
        jPanelDerechos.setLayout(jPanelDerechosLayout);
        jPanelDerechosLayout.setHorizontalGroup(
            jPanelDerechosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDerechosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jblDerechos, javax.swing.GroupLayout.DEFAULT_SIZE, 938, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelDerechosLayout.setVerticalGroup(
            jPanelDerechosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jblDerechos, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        jPanelFondo.add(jPanelDerechos);
        jPanelDerechos.setBounds(0, 550, 950, 50);

        txtPuerto.setText("Puerto");
        jPanelFondo.add(txtPuerto);
        txtPuerto.setBounds(120, 290, 130, 22);

        txtIP.setText("IP");
        jPanelFondo.add(txtIP);
        txtIP.setBounds(120, 230, 130, 22);

        btnConectar.setText("Conectar");
        btnConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConectarActionPerformed(evt);
            }
        });
        jPanelFondo.add(btnConectar);
        btnConectar.setBounds(300, 450, 90, 20);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, 950, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectarActionPerformed

    String ip = txtIP.getText().trim();
    int puerto;

    
    
//    try {
//        puerto = Integer.parseInt(txtPuerto.getText().trim());
//    } catch (NumberFormatException e) {
//        JOptionPane.showMessageDialog(this, "El puerto debe ser un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
//        return;
//    }
//
//    System.out.println("Intentando conectar a " + ip + " en el puerto " + puerto);
//
//    try {
//        Socket socket = new Socket(ip, puerto);
//        System.out.println("Conexión establecida con el servidor");
//        PantallaAsignacion asi = new PantallaAsignacion(origen, socket, false);
//        asi.setVisible(true);
//        
//        this.dispose();
//    } catch (IOException e) {
//        System.out.println("Error al intentar conectar: " + e.getMessage());
//        JOptionPane.showMessageDialog(this, "No se pudo conectar al servidor.\n" + e.getMessage(), "Error de Conexión", JOptionPane.ERROR_MESSAGE);
//    }

        new Thread(() -> {
        try {
            
            
            String colorString = "";
            String nombre = "";
            
            if(new File("jugador.txt").exists()){
            
                try (BufferedReader reader = new BufferedReader(new FileReader("jugador.txt"))) {
                    String linea;
                    while ((linea = reader.readLine()) != null) {
                        String[] partes = linea.split("=");
                        if (partes.length == 2) {
                            if (partes[0].equals("nombre")) {
                                nombre = partes[1];
                            } else if (partes[0].equals("color")) {
                                colorString = partes[1];
                            }
                        }
                    }
                }
                catch (FileNotFoundException ex) {
                Logger.getLogger(PantallaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
                
            
            
            
            Socket socket = new Socket(ip, 5000); // IP del servidor y puerto deben coincidir
            System.out.println("Conectado al servidor en " + ip);
            

            SwingUtilities.invokeLater(() -> {
                PantallaAsignacion asignacion = new PantallaAsignacion(origen, false); // false = soy cliente
                asignacion.setSocket(socket);
                asignacion.setVisible(true);
                this.setVisible(false);
            });

        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "No se pudo conectar al servidor.");
        }
    }).start();
    
    
    }//GEN-LAST:event_btnConectarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConectar;
    private javax.swing.JPanel jPanelDerechos;
    private javax.swing.JPanel jPanelFondo;
    private javax.swing.JPanel jPanelHead;
    private javax.swing.JLabel jblConfiguracion;
    private javax.swing.JLabel jblDerechos;
    private javax.swing.JTextField txtIP;
    private javax.swing.JTextField txtPuerto;
    // End of variables declaration//GEN-END:variables
}
